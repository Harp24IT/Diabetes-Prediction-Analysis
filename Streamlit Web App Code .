
import streamlit as st
from PIL import Image
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

df=pd.read_csv('Diabetes.csv')

img=Image.open("diabetes-stats-report-724px.png")

st.title('Diabetes Analysis')
st.image(img)


st.markdown('This project helps to predict the diabetes of a patient by getting their input. Here I have used RANDOM FOREST CLASSIFIER Algorithm to train the data and I have displayed the result using streamlit.')
st.divider()

st.subheader('Description')
st.write(df.describe())

st.subheader('Data Visualization')
st.area_chart(df)

X=df.iloc[:,:-1]
y=df.iloc[:,-1]

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2,random_state=42)

# Model Building
from sklearn.ensemble import RandomForestClassifier
model=RandomForestClassifier()
model.fit(X_train,y_train)
y_pred=model.predict(X_test)
def user():
    st.sidebar.title('Enter Input')
    pregnancies=st.sidebar.slider('pregnancies',25,0)
    glucose=st.sidebar.slider('glucose',200,0)
    diastolic=st.sidebar.slider('diastolic',200,0)
    triceps=st.sidebar.slider('triceps',200,0)
    insulin=st.sidebar.slider('insulin',900,0)
    bmi=st.sidebar.slider('bmi',89.99,1.00)
    dpf=st.sidebar.slider('Diabetes Pedigree Function',2.42,0.078)
    age=st.sidebar.slider('Age',100,18)

    userinput={'pregnancies':pregnancies,'glucose':glucose,'diastolic':diastolic,'triceps':triceps,'insulin':insulin,'bmi':bmi,'dpf':dpf,'age':age}
    user_input=pd.DataFrame(userinput,index=[0])
    return user_input

user_input=user()
user_output=model.predict(user_input)
st.divider()
if user_output==1:
    st.write('Result : You have Diabetes')
else:
    st.write('Result : You do not have Diabetes')

from sklearn.metrics import accuracy_score
accuracy=accuracy_score(y_test,y_pred)*100

st.write('Accuracy :',accuracy)
